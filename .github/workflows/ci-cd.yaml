name: CI/CD for Discovery Server

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build the JAR
      - name: Build with Maven
        run: mvn clean install -X

      # Step 5: Verify target directory
      - name: Verify target directory
        run: ls -la target || echo "Target directory not found after build!"

      # Step 6: Upload Build Artifacts
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: target/

  deploy:
    name: Deploy Docker Image and Kubernetes
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Download Build Artifacts
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: target

      # Step 3: Inspect downloaded artifact structure
      - name: Inspect downloaded artifact structure
        run: ls -R || echo "No files downloaded!"

      # Step 4: Move JAR file to target directory
      - name: Move JAR file to target directory
        run: |
          mkdir -p target
          mv discovery-server-0.0.1-SNAPSHOT.jar target/ || echo "No JAR file to move"

      # Step 5: Verify target directory after moving
      - name: Verify target directory after move
        run: ls -la target || echo "Target directory still not found!"

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          docker build -t janindu3/discovery-server:${{ github.sha }} .
          docker tag janindu3/discovery-server:${{ github.sha }} janindu3/discovery-server:latest
          docker push janindu3/discovery-server:${{ github.sha }}
          docker push janindu3/discovery-server:latest

      # Step 8: Set up kubectl (Install kubectl CLI)
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # Step 9: Configure kubeconfig
      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      # Step 10: Apply Kubernetes Configuration
      - name: Apply Kubernetes Configuration
        run: kubectl apply -f deployment.yaml
